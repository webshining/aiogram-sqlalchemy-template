services:
  app:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DB_NAME: ${DB_NAME:-database}
      DB_USER: ${DB_USER:-webshining}
      DB_PASS: ${DB_PASS:-admin}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      RD_DB: ${RD_DB:-5}
      RD_HOST: ${RD_HOST:-redis}
      RD_PORT: ${RD_PORT:-6379}
    entrypoint:
      - ./bin/entrypoint.sh
    volumes:
      - ./logs:/app/logs
  db:
    image: postgres:alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: webshining
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - redis:/data

volumes:
  postgres_data:
  redis: